CS224
Lab No.: 2
Section No.: 1
Your Full Name: Arda Ä°ynem
Bilkent ID: 22002717
Date: 12/10/2022

#############################
# convertHexToDec.asm start #
#############################

#--------------------------------------------------- Text Segment ---------------------------------------------------
	.text
input:
	la $a0, msgInput
	li $v0, 4
	syscall
	
	la $a0, maxArray
    	li $a1, 30
	li $v0, 8
	syscall
	

	la $a0, maxArray
	jal findSize
	
	move $t0, $v0 # t0 = number size
	
	la $a0, maxArray
	move $a1, $t0
	jal checkStart
	
	move $t1, $v0
	
	la $a0, msgResult
	li $v0, 4
	syscall
	
	move $a0, $t1
	li $v0, 1
	syscall
		
	la $a0, newLine
	li $v0, 4
	syscall
	syscall
	
	j input
	
checkStart:
	addi $sp, $sp, -24
	sw $s4, 20($sp)
	sw $s3, 16($sp)
	sw $ra, 12($sp)
	sw $s0, 8($sp)
	sw $s1, 4($sp)
	sw $s2, 0($sp)
	
	move $s0, $a0 # s0 = temp array adress
	move $s2, $a1 # s2 = number size
	#----------
	add $s0, $s0, $s2
	addi $s0, $s0, -1
	#----------
	li $s3, 0 # s3 = repetition counter
	li $s4, 0
	
checkLoop:
	lbu $s1, ($s0) # s1 = temp char value
	bge $s1, 48, checkContinue1

checkTerminate:
	li $v0, 10
	syscall
	
checkContinue1:
	ble  $s1, 57, checkDone
	bge $s1, 65, checkContinue2
	j checkTerminate
	
checkContinue2:
	ble  $s1, 70, checkDone
	j checkTerminate
checkDone:
	ble  $s1, 57, decrement
	subi $s1, $s1, 7
decrement:
	subi $s1, $s1, 48
	
	move $a0, $s1
	move $a1, $s3
	jal convert
	
	add $s4, $s4, $v0
	addi $s0, $s0, -1
	addi $s3, $s3, 1
	blt $s3, $s2, checkLoop
checkEnd:
	move $v0, $s4
	lw $s4, 20($sp)
	lw $s3, 16($sp)
	lw $ra, 12($sp)
	lw $s0, 8($sp)
	lw $s1, 4($sp)
	lw $s2, 0($sp)
	addi $sp, $sp, 24
	jr $ra
	
	
#--------------------------------------------------- Subprogram Segment ---------------------------------------------------
convert:
	addi $sp, $sp, -24
	sw $s4, 20($sp)
	sw $s3, 16($sp)
	sw $ra, 12($sp)
	sw $s0, 8($sp)
	sw $s1, 4($sp)
	sw $s2, 0($sp)
	
	move $s0, $a0 # s0 = number
	move $s1, $a1 # s1 = repetition
	
	li $s2, 1
	li $s4, 0
	bnez $s1, convertContinue
	move $v0, $s0
	j convertEnd
convertContinue:
	li $s3, 16
	mul $s2, $s2, $s3
	addi $s4, $s4, 1
	blt $s4, $s1, convertContinue
	
	mul $v0, $s0, $s2
convertEnd:
	lw $s4, 20($sp)
	lw $s3, 16($sp)
	lw $ra, 12($sp)
	lw $s0, 8($sp)
	lw $s1, 4($sp)
	lw $s2, 0($sp)
	addi $sp, $sp, 24
	jr $ra
	
findSize:
	add $s0, $a0, $zero
	li $s2, 0
findSizeLoop:
	lbu $s1, ($s0)
	beq $s1, 10, findSizeDone
	beqz $s1,findSizeDone
	addi $s0, $s0, 1
	addi $s2, $s2, 1
	j findSizeLoop
findSizeDone:
	move $v0, $s2
	jr $ra
	
	
#--------------------------------------------------- Data Segment ---------------------------------------------------
	.data
maxArray: .space 30
msgInput: .asciiz "Input a valid hexademical number with UPPERCASE letters (invalid number to terminate): " 
msgResult: .asciiz "\nResult is: "
newLine: .asciiz "\n"

###########################
# convertHexToDec.asm end #
###########################




#########################
# invertBytes.asm start #
#########################

#--------------------------------------------------- Text Segment ---------------------------------------------------
	.text
	
menu:
	la $a0, menuA
	li $v0, 4
	syscall
	la $a0, menuB
	li $v0, 4
	syscall
	la $a0, msgMenu
	li $v0, 4
	syscall
	li $v0, 12
	syscall
	la $t5, ($v0)
	la $a0, newLine
	li $v0, 4
	syscall
	
	beq $t5, 97, A
	beq $t5, 98, terminate
	j menu
	
A:
	la $a0, msgInput
	li $v0, 4
	syscall
	
	li $v0, 5
	syscall
	la $t0, ($v0) # t0 = decimal number
	
	la $a0, msgHex
	li $v0, 4
	syscall
	
	la $a0, ($t0)
	li $v0, 34
	syscall
	
	la $a0, newLine
	li $v0, 4
	syscall
	
	la $a0, ($t0)
	jal findSize
	la $t2, ($v0) # t2 = size
	
	la $a0, ($t0) # number
	la $a1, ($t2) # size
	jal invert
	
	move $t0, $v0
	
	la $a0, msgHexInverted
	li $v0, 4
	syscall
	
	la $a0, ($t0)
	li $v0, 34 
	syscall # print decimal in hexadecimal
	
	la $a0, newLine
	li $v0, 4
	syscall
	syscall
	
	j menu
terminate:
	li $v0, 10
	syscall # print decimal in hexadecimal
	

#--------------------------------------------------- Subprogram Segment ---------------------------------------------------
	
invert:
	li $s0, 15 # 0000 0000 1111 1111 = 15 for and masking
	move $s1, $a0 # number
	move $s2, $a1 # size
	li $s3, 0 # temp value
	li $s4, 0 # result
	
	li $s2, 4
	addi $sp, $sp, -32
	addi $s5, $sp, 28

invertLoop:
	blez $s2, invertLoop2
	andi $s3, $s1, 255
	sw $s3, ($s5)
	
	srl $s1, $s1, 8
	addi $s5, $s5, -4
	addi $s2, $s2, -1
	j invertLoop
	
invertLoop2:
	bge $s2, 4, invertDone
	addi $s5, $s5, 4
	addi $s2, $s2, 1
	lw $s3, ($s5)
	sllv $s3, $s3, $s1
	mul $s1, $s2, 8
	add $s4, $s4, $s3
	j invertLoop2

invertDone:
	la $v0, ($s4)
	addi $sp, $sp, 32
	jr $ra
	
findSize:
	move $s0, $a0
	li $s1, 0
findSizeLoop:
	beqz $s0, findSizeDone
	srl $s0, $s0, 4
	addi $s1, $s1, 1
	j findSizeLoop
findSizeDone:
	la $v0, ($s1)
	jr $ra
	

#--------------------------------------------------- Data Segment ---------------------------------------------------
	.data
msgInput: .asciiz "Input a decimal number: " 
msgMenu: .asciiz "Input menu choice: "
msgHex: .asciiz "Hexadecimal representation of the number is: "
msgHexInverted: .asciiz "Inverted Hexadecimal representation of the number is: "
newLine: .asciiz "\n"
stackArray: .space 32
menuA: .asciiz "a. Find inverted hexadecimal representation of the decimal number.\n"
menuB: .asciiz "b. Quit.\n"


#######################
# invertBytes.asm end #
#######################